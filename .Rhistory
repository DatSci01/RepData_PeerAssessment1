boxplot(x,horizontal=TRUE,plot=FALSE)
boxplot(x,horizontal=TRUE,notch=TRUE)
boxplot(x,horizontal=TRUE)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version),ip_id)
cran3<-select(ip_id, package, size)
cran3<-select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20,size_gb=size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,avg_size=mean(size))
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
head(top_counts, 20)
arrange(top_counts,desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum,unique>465)
top_unique
arrange(top_unique,desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
submit()
students3
submit()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
rbind_list(passed,failed)
sat
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_dat<-today()
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = h(now()), minutes = m(now()), seconds = s(now()))
update(this_moment, hours = 13, minutes = 53)
this_moment<-update(this_moment, hours = 13, minutes = 53)
this_moment
nyc<-now(tzone="America/New_York")
nyc
nyc+days(2)
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz = "Singapore")
last_time
new_interval()
?new_interval()
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
q
quit
exit
quit()
library(dplyr)
library(tidyr)
library(lubridate)
install.packages("tidyr")
library(tidyr)
install.packages("lubridate")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("8c1264a0f50837dfed35", "3e694c26e81b1152bddafcce3ebdcdd08c272fef")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
setwd("K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data")
setwd("K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project")
setwd("K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project")
source("run_analysis.R")
source("run_analysis.R")
d<-read.table("features.txt")
setwd("K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/UCI HAR Dataset")
d<-read.table("features.txt")
head(d)
sub("mean()","Mean",d$2)
sub("mean()","Mean",d$2,)
sub("mean()","Mean",d,)
head(d)
e<-d$2
head(d$2)
head(d[V2])
f<-c("tBodyAcc-mean()-X","tBodyAcc-mean()-Y","tBodyAcc-mad()-X")
str(d)
g<-levels(d$V2)
f
sub("-mean()","Mean",f,)
f
sub("()","",f,)
h<-sub("-mean()","Mean",f,)
h
x <- "BBCDEF"
str_sub(x, 1, 1) <- "A"; x
f
h<-sub("-mean()","Mean",f,fixed=TRUE)
h
d
levels(d)
d<-read.table("features.txt")
d
levels(d)
dt_activity_labels
dt_features
dt_features
head(dt_features,100)
features_sel
dt_features_sel
d<-dt_features_sel
di
e
d
h<-sub("-mean()","Mean",d$V2,fixed=TRUE)
h
d$V2
h<-sub("-mean","Mean",d$V2,fixed=TRUE)
d$V2
h
d$V2<-sub("-mean","Mean",d$V2,fixed=TRUE)
d$V2
d$V2<-sub("t","time",d$V2,)
d$V2
d<-dt_features_sel
d$V2
d$V2<-sub("tBody","timeBody",d$V2,)
d$V2
d$V2<-sub("tGravity","timeGravity",d$V2,)
d$V2
d$V2<-sub("fBody","frequencyBody",d$V2,)
d$V2
d$V2<-sub("-mean","Mean",d$V2,)
d$V2
d$V2<-sub("std","StandardDeviation",d$V2,)
d$V2
d$V2<-sub("Acc","Acceleration",d$V2,)
d$V2
d$V2<-sub("Mag","Magnitude",d$V2,)
d$V2
d$V2<-sub("BodyBody","Body",d$V2,)
d$V2
d$V2<-sub("()","",d$V2,fixed=TRUE)
d$V2
d$V2<-sub("MeanFreq","MeanFrequency",d$V2,)
d$V2
e<-dt_features_sel
e<-d
d
d
d<-dt_features_sel
d
d$V2<-sub("tBody","timeBody",d$V2,)
d$V2<-sub("tGravity","timeGravity",d$V2,)
d$V2<-sub("fBody","frequencyBody",d$V2,)
d$V2<-sub("-mean","Mean",d$V2,)
d$V2<-sub("-std","StandardDeviation",d$V2,)
d$V2<-sub("Acc","Acceleration",d$V2,)
d$V2<-sub("Mag","Magnitude",d$V2,)
d$V2<-sub("BodyBody","Body",d$V2,)
d$V2<-sub("()","",d$V2,fixed=TRUE)
d$V2<-sub("MeanFreq","MeanFrequency",d$V2,)
d
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
setwd("K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project")
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
read.table("tidydata.txt")
x<-read.table("tidydata.txt")
head(x)
head(dt_obs_sel)
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
x<-read.table("tidydata.txt")
head(x)
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
x<-read.table("tidydata.txt")
head(x)
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
x<-read.table("tidydata.txt")
head(x)
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis_bak.R')
x<-read.table("tidydata.txt")
head(x)
setwd("K:/OneDrive/Course Notes/R/Data")
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis_bak.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis_bak.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis_bak.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis_bak.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis_bak.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis_bak.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis_bak.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis_bak.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
x<-read.table("tidydata.txt")
head(x)
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
x<-read.table("tidydata.txt")
head(x)
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
x<-read.table("tidydata.txt")
head(x)
head(tidy_summary)
head(dt_obs_sel)
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
x<-read.table("tidydata.txt")
head(x)
head(x,20)
head(tidy_summary)
d<-dt_obs_sel
head(d)
e<-group_by(d,subject)
head(e)
f<-group_by(e,activity)
head(f)
g<-group_by(dt_obs_sel,subject,activity)
head(g)
x<-summarise_each(funs(mean))
x<-summarise_each(g,funs(mean))
head(x)
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
x<-read.table("tidydata.txt")
head(x,10)
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
head(tidy_summary,20)
head(dt_obs_sel,20)
a<-group_by(dt_obs_sel,subject,activity)
head(a,20)
summarise_each(a,funs(mean))
head(dt_obs_sel)
head(dt_obs,10)
y<-subset(dt_obs$V1,subject==1&activity=walking,select=V1)
y<-subset(dt_obs$V1,subject==1&activity==walking,select=V1)
y<-subset(dt_obs,subject==1&activity==walking,select=V1)
y<-subset(dt_obs,subject==1&activity==1,select=V1)
y
head(dt_obs$activity)
y<-subset(dt_obs,subject==1&activity==STANDING,select=V1)
y<-subset(dt_obs,subject==1&activity=="STANDING",select=V1)
y
mean(y)
mean(y$V1)
dt_features_sel
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
dt_features_sel
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
dt_features_sel
source('K:/OneDrive/Course Notes/R/Data/Getting and Cleaning Data/Course Project/run_analysis.R')
dt_features_sel
x<-read.table("tidydata.txt")
head(x,20)
a<-subset(dt_obs,activity=="WALKING"&subject==1,select=V1)
head(a)
mean(a$V1)
View(dt_features_sel)
View(dt_features)
View(dt_features_sel)
write.table(dt_features_sel,"selected_features.txt",row.name=FALSE)
View(dt_features)
a<-c(3,5,8,2,5,9)
mean(a)
std(a)
sd(a)
b<-c(1:1000)
b
boxplot(a)
rep(0:1,each=50)
install.packages("lattice")
set.seed(10)
x<-rnorm(100)
f<-rep(0:1,each=50)
y<-x+f-f*x+rnorm(100,sd=.5)
f<-factor(f,labels=c("Group 1","Group 2"))
xyplot(y~x|f,layout=c(2,1))
libary(lattice)
library(lattice)
xyplot(y~x|f,layout=c(2,1))
library(nlme)
xyplot(weight~Time|Diet,BodyWeight)
str(BodyWeight)
?splom
libary(datasets)
library(datasets)
data(airquality)
str(airquality)
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
library(ggplot2)
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
qplot(Wind,Ozone,data=airquality)
str(airquality)
airquality=transform(airquality,Month=factor(Month))
str(airquality)
qplot(Wind,Ozone,data=airquality,facets=.~Month)
g<-ggplot(movies,aes(votes,rating))
print(g)
data(movies)
qplot(votes,rating,data=movies)
qplot(votes,rating,data=movies)+geom_smooth()
qplot(votes,rating,data=movies,smooth="loess")
qplot(votes,rating,data=movies)
qplot(votes,rating,data=movies,smooth="loess")
qplot(votes,rating,data=movies)
qplot(votes,rating,data=movies,smooth="loess")
qplot(votes,rating,data=movies,panel=panel.loess)
qplot(votes,rating,data=movies)
qplot(votes,rating,data=movies,smooth="loess")
qplot(votes,rating,data=movies,panel=panel.loess)
qplot(votes,rating,data=movies)
qplot(votes,rating,data=movies,smooth="loess")
qplot(votes,rating,data=movies)+stats_smooth("loess")
png(filename = "smooth.png")
qplot(votes,rating,data=movies)
dev.off()
png(filename = "smooth1.png")
qplot(votes,rating,data=movies,smooth="loess")
dev.off()
png(filename = "smooth2.png")
qplot(votes,rating,data=movies,panel=panel.loess)
dev.off()
qplot(votes,rating,data=movies,smooth="loess")
qplot(votes,rating,data=movies)
dev.off()
qplot(votes,rating,data=movies)
qplot(votes,rating,data=movies,smooth="loess")
update.packages(checkBuilt=TRUE, ask=FALSE)
library(jpeg)
library(ggplot2)
setwd("K:/GitRepo/RepData_PeerAssessment1")
source('K:/GitRepo/RepData_PeerAssessment1/cp1.R')
source('K:/GitRepo/RepData_PeerAssessment1/cp1.R')
View(activity)
source('K:/GitRepo/RepData_PeerAssessment1/cp1.R')
source('K:/GitRepo/RepData_PeerAssessment1/cp1.R')
source('K:/GitRepo/RepData_PeerAssessment1/cp1.R')
unlink(activity.csv)
View(activity)
View(activity)
str(activity)
aves<-aggregate(steps~date,data=activity,mean)
View(aves)
hist(aves$steps)
source('K:/GitRepo/RepData_PeerAssessment1/cp1.R')
tots<-aggregate(steps~date,data=activity,sum)
hist(tots$steps)
View(aves)
print(aves)
meds<-aggregate(steps~data,data=activity,median)
meds<-aggregate(steps~date,data=activity,median)
View(meds)
meds<-aggregate(steps~date,data=activity,median,na.rm=TRUE)
meds<-aggregate(steps~date,data=activity,median,na.rm=TRUE)
View(meds)
meds<-aggregate(steps~date,data=activity,median,, na.action = na.omit)
meds<-aggregate(steps~date,data=activity,median, na.action = na.omit)
View(meds)
View(aves)
View(tots)
View(meds)
meds<-aggregate(steps~date,data=activity,FUN=median)
View(meds)
View(activity)
meds<-aggregate(steps~date,data=activity,FUN=median, na.action = na.omit)
View(meds)
meds<-aggregate(steps~date,data=activity,summary)
View(meds)
aggregate(steps~date,data=activity,summary)
aggregate(steps~date,data=activity,summary,na.action=na.omit)
act1<-activity[activity$date=="2012-10-02",]
View(act1)
str(act1)
View(activity)
act2<-subset(activity,date=="2012-10-02")
View(act2)
View(activity)
act2<-subset(activity,date=="2012-10-03")
View(act2)
str(act2)
summary(act2)
View(tots)
mean(tots$steps)
median(tots$steps)
source('K:/GitRepo/RepData_PeerAssessment1/cp1.R')
source('K:/GitRepo/RepData_PeerAssessment1/cp1.R')
source('K:/GitRepo/RepData_PeerAssessment1/cp1.R')
